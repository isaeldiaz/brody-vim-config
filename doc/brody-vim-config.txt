*brody-vim-config.txt*  My custom key bindings

This is a help file for my custom key bindings. It explains what each binding does and how to use it.

<F1>      Opens this help window

==============================================================================
Plug 'easymotion/vim-easymotion'

These are the bindings for the easymotion plugin, which provides fast
motion within a line or across the screen.

<Leader>w             Move to word
<Leader>f{char}       Move to {char}
<Leader>/{char}       Search {char}
<Leader>s{char}{char} Move to {char}{char}

See |easymotion.txt| for more details.

==============================================================================
Plug 'scrooloose/nerdtree'

These are the bindings for the nerdtree plugin, which provides a tree
explorer for the filesystem.

<F2>      Toggle On/Off
<F3>      Open in current file
<Leader>n Move Cursor to NERDTree

See |nerdtree.txt| for more details.

==============================================================================
Plug 'christoomey/vim-tmux-navigator'

These are the bindings for the tmux-navigator plugin, which allows seamless
navigation between vim and tmux splits using a consistent set of hotkeys.

<ctrl-h> => Left
<ctrl-j> => Down
<ctrl-k> => Up
<ctrl-l> => Right
<ctrl-\> => Previous split

See |tmux-navigator.txt| for more details.

==============================================================================
Plug 'jlanzarotta/bufexplorer'

These are the bindings for the bufexplorer plugin, which provides an easy
and convenient way to list and switch between buffers.

<Leader>be :normal open
<Leader>bt :toggle open / close
<Leader>bs :force horizontal split open
<Leader>bv :force vertical split open

See |bufexplorer.txt| for more details.

==============================================================================
Plug 'tpope/vim-surround'

These are the bindings for the surround plugin, which provides mappings to
easily delete, change and add surroundings in pairs.

 delimiter can be     : ' " <tag delimiter> { [
 cs{sr1}{sr2}         : Change sorround delimiter1 to delimiter2
 cst{sr2}             : Change sorround tag to delimiter2
 ds{sr}               : Delete delimiter
 dst                  : Delete sorround tag
 Text object can be   : a-word (aw), inner-word (iw), etc
 ys{text-object}{sr1} : Yank surround delimiter in text-object tp sr1
 yss{sr1}             : Yanks sorround into the entire line
 S{sr1}               : In VISUAL Mode it will insert delimiters before and
                        after the given lines Very useful for XML and HTML

 See |surround.txt| for more details.

==============================================================================
Plug 'nvim-telescope/telescope.nvim'

These are the bindings for the telescope plugin, which provides mappings to
 fuzzy finder

<leader>tf : Telescope find_files
<leader>tg : Telescope live_grep
<leader>tb : Telescope buffers
<leader>th : Telescope help_tags

 See |telescope.txt| for more details.

==============================================================================
Plug 'scrooloose/nerdcommenter'

[count]<leader>cc       : Comment out the current line or text selected in visual mode.
[count]<leader>c<space> : Toggles the comment state of the selected line(s).
                          If the topmost selected line is commented, all selected lines
                          are uncommented and vice versa.
[count]<leader>cu       : Uncomments the selected line(s).

See |nerdcommenter.txt| for more details.

==============================================================================
Plug 'junegunn/vim-easy-align'

In normal mode:
 ga  : Enter Easy align interactive, e.g. ga[ip][=] will align paragragh to
       '=' delimiter.

In Visual mode:
 [text-object]ga [align-delimiter] : Will allign the text object at the given
                                     delimiter, e.g. [ip]ga[=] -> Align inner 
                                     paragraph to '=' delimiter.

In EasyAlign interactive mode 
<c-x>      -> to enter regex expression
<space>    -> around 1st whitespaces
2<space>   -> around 2nd whitespaces
-<space>   -> around the last whitespaces
-2<space>  -> around the 2nd to last whitespaces
:          -> around 1st colon (key:  value)
<right>:   -> around 1st colon (key : value)
=          -> around 1st operators with =
3=         -> around 3rd operators with =
*=         -> around all operators with =
**=        -> left-right alternating around =
<enter>=   -> right alignment around 1st =
<enter>**= -> right-left alternating around =


See |*easy-align.txt|* for more details.

==============================================================================
Plug 'triglav/vim-visual-increment'
Create increasing sequence of numbers via visual mode

In Visual mode
[number]<C-a> : Increment all the indexes from the first one selected by
                number, default is number=1

set nrformats=[format]  : The format can be bin, alpha, octal, hex, hex 
                          must start with 0x and octal with 0. More than one
                          format can be set as a comma separated values e.g.
                          set nrformat=bin,alpha,hex

See |visual-increment.txt| for more details

==============================================================================
Plug 'jeffkreeftmeijer/vim-numbertoggle'

set rnu! : to remove relative numbers
set nu   : in commandline mode to turn on and
set nonu : will turn off the line number display or
set nu!  : to toggle off display of line numbers
<C-n>    : Toggle numbers or not number

See |numbertoggle.txt| for more details

==============================================================================
 vim:tw=78:ts=8:ft=help:norl:

